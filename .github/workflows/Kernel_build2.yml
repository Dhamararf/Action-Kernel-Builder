name: Kernel Build 2

on:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        default: Fulmen Kernel Build
        required: false
      CODENAME:
        description: 'Device codename'
        default: Blossom
        required: true
      KERNEL_SOURCE:
        description: 'Kernel Source'
        default: https://github.com/Dhamararf/android_kernel_mediatek_mt6765g.git
        required: true
      KERNEL_SOURCE_BRANCH:
        description: 'Kernel Source Branch'
        required: true
      DEFCONFIG:
        description: 'Kernel Defconfig'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url'
        default: https://github.com/Dhamararf/AnyKernel3.git
        required: false
      ANYKERNEL_BRANCH:
        description: 'AnyKernel Branch (defaults to codename)'
        default: master
        required: true
      SEND_NOTIFICATION:
        description: 'Send Notification'
        type: boolean
        default: true
      ENABLE_KERNELSU:
        description: 'KernelSU'
        type: boolean
        default: false

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Display Inputs
      run: |
        echo "Build Title: ${{ github.event.inputs.BUILD_TITLE }}"
        echo "Codename: ${{ github.event.inputs.CODENAME }}"
        echo "Source: ${{ github.event.inputs.KERNEL_SOURCE }} (${{ github.event.inputs.KERNEL_SOURCE_BRANCH }})"
        echo "Defconfig: ${{ github.event.inputs.DEFCONFIG }}"
        echo "AnyKernel: ${{ github.event.inputs.ANYKERNEL_URL }} (${{ github.event.inputs.ANYKERNEL_BRANCH }})"
        echo "Notification: ${{ github.event.inputs.SEND_NOTIFICATION }}"
        echo "KernelSU: ${{ github.event.inputs.ENABLE_KERNELSU }}"

    - name: Init Workspace
      run: |
        mkdir workspace && cd workspace
        echo "current_date=$(date +'%d %B %Y')" >> $GITHUB_OUTPUT
        echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        echo "kernelsu=${{ github.event.inputs.ENABLE_KERNELSU }}" >> $GITHUB_OUTPUT
        echo "build_title=${{ github.event.inputs.BUILD_TITLE || github.event.inputs.CODENAME }}" >> $GITHUB_OUTPUT
      id: workspace

    - name: Notify Start
      if: ${{ fromJSON(github.event.inputs.SEND_NOTIFICATION) && secrets.TELEGRAM_TO != '' }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          <b>${{ github.event.inputs.BUILD_TITLE }}</b>
          <b>⚒️ Kernel Build Started</b>

          <b>📱 Device</b>: Xiaomi Redmi 9C
          <b>💾 Codename</b>: ${{ github.event.inputs.CODENAME }}
          <b>🏷️ Branch</b>: ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}
          <b>🗓️ Date</b>: ${{ steps.workspace.outputs.current_date }}

          <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        format: html

    - name: Install Dependencies & Clang
      run: |
        sudo apt update && sudo apt install -y bc curl git zip flex libssl-dev \
          python2 python3 gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libfl-dev
        mkdir clang && cd clang
        wget https://github.com/ZyCromerZ/Clang/releases/download/11.1.0-20220724-release/Clang-11.1.0-20220724.tar.gz
        tar -xf *.tar.gz
        echo "tools-folder=$(pwd)" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: tools

    - name: Clone Kernel Source
      run: |
        git clone --depth=1 ${{ github.event.inputs.KERNEL_SOURCE }} -b ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }} kernel_tree
        echo "kernel-folder=$(pwd)/kernel_tree" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: kernel

    - name: Add KernelSU
      if: ${{ github.event.inputs.ENABLE_KERNELSU }}
      run: |
        curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}

    - name: Build Kernel
      run: |
        export CLANGDIR="${{ steps.tools.outputs.tools-folder }}"
        cd ${{ steps.kernel.outputs.kernel-folder }}
        make O=out ARCH=arm64 ${{ github.event.inputs.DEFCONFIG }}_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 LLVM=1 LLVM_IAS=1 \
          CC=clang LD=ld.lld CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
          HOSTCC=clang HOSTCXX=clang++ || exit 1
        echo "elapsed_time=$(($(date +%s) - ${{ steps.workspace.outputs.start_time }}))" >> $GITHUB_OUTPUT
      id: build

    - name: Pack with AnyKernel
      run: |
        git clone --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b ${{ github.event.inputs.ANYKERNEL_BRANCH }} AnyKernel3
        cp ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image.gz AnyKernel3/
        cd AnyKernel3
        name=FulmenKernel-${{ github.event.inputs.CODENAME }}$( [ "${{ github.event.inputs.ENABLE_KERNELSU }}" == "true" ] && echo "-KSU" ).zip
        zip -r9 $name *
        mv $name ../
        echo "zipname=$name" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: anykernel

    - uses: actions/upload-artifact@v4
      if: ${{ success() }}
      with:
        name: KernelZip
        path: ${{ steps.workspace.outputs.workspace-folder }}/${{ steps.anykernel.outputs.zipname }}

    - name: Notify Success
      if: ${{ fromJSON(github.event.inputs.SEND_NOTIFICATION) && steps.build.outcome == 'success' && secrets.TELEGRAM_TO != '' }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        document: ${{ steps.workspace.outputs.workspace-folder }}/${{ steps.anykernel.outputs.zipname }}
        message: |
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>✅ Kernel Build Success</b>

          <b>📱 Device</b>: Xiaomi Redmi 9C
          <b>💾 Codename</b>: ${{ github.event.inputs.CODENAME }}
          <b>🏷️ Branch</b>: ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}
          <b>⏳ Time</b>: ${{ steps.build.outputs.elapsed_time }} sec
          <b>📦 Zip</b>: ${{ steps.anykernel.outputs.zipname }}
          <b>☯️ KernelSU</b>: ${{ github.event.inputs.ENABLE_KERNELSU }}

          <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        format: html

    - name: Notify Failure
      if: ${{ fromJSON(github.event.inputs.SEND_NOTIFICATION) && failure() && secrets.TELEGRAM_TO != '' }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>❌ Kernel Build Failed</b>

          <b>📱 Device</b>: Xiaomi Redmi 9C
          <b>💾 Codename</b>: ${{ github.event.inputs.CODENAME }}
          <b>🏷️ Branch</b>: ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}
          <b>☯️ KernelSU</b>: ${{ github.event.inputs.ENABLE_KERNELSU }}

          Check logs at:
          <b>${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}</b>
        format: html
